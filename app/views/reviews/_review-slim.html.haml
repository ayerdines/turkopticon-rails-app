.review-header
  %span.hit-title.bold= r.hit.title

  = render 'reviews/tags', tags: r.tags

  .review-body= minimd r.context.censor unless r.context.nil?

  .review-footer
    %ul.inline
      %li
        = link_to_unless_current nameify(r.person), reviews_u_path(obs r.person.id)
        = user_class(r.person)
      %li
        - time = r.created_at
        - ts = %[<time class="timestamp" datetime="#{time}" title="#{time_ago_in_words time} ago">#{time}</time>].html_safe
        = link_to_unless_current ts, review_path(r)
        - unless time == r.updated_at
          %time.edited{ datetime: r.updated_at, title: "edited #{time_ago_in_words r.updated_at} ago\n#{r.updated_at}" } [e]

      - if controller_name == 'flags'
        - if @user.moderator?
          %li= r.valid_review? ? link_to('remove review', review_path(r, 'review[valid_review]': false), method: :put) : 'removed'
          - unless r.valid_review?
            %li= link_to 'undo', review_path(r, 'review[valid_review]': true), method: :put
      - else
        - unless r.valid_review?
          %li{ style: 'text-transform:uppercase' } invalidated
