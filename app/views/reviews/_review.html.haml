.review-header
  %span.hit-title.bold= r.hit.title
  .tagbox
    - r.tags.each do |t|
      %span.inline.tag{'data-context': t[2], class: tag_class(t)}= tag_label t

  .review-body= r.context.censor unless r.context.nil?

  .review-footer
    %ul.inline
      %li
        = link_to nameify(r.person), reviews_u_path(obs r.person.id)
        = user_class(r.person)
      %li
        - time = r.created_at
        - ts = %[<time class="timestamp" datetime="#{time}" title="#{time_ago_in_words time} ago">#{time}</time>].html_safe
        = link_to_unless_current ts, review_path(r)
        - unless time == r.updated_at
          %time.edited{ datetime: r.updated_at, title: "edited #{time_ago_in_words r.updated_at} ago\n#{r.updated_at}" } [e]
      - if r.valid_review?
        %li{class: "flag-#{r.id}"}
          = link_to_unless(flaggers.include?(@user.id), 'flag', ujs_path(:new_flag, r: r.id), remote: true, method: :patch) { 'flagged' }
      - else
        %li{ style: 'text-transform:uppercase'} invalidated
      %li= link_to 'comment', ujs_path(:new_comment, r: r.id), remote: true, method: :patch
      - if controller_name == 'requesters' && @user.id == r.person_id
        %li= link_to 'edit', edit_review_path(r)

  %div{ class: "new-comment-#{r.id}" }

  - if (size = r.comments.size) > 0
    .comments-divider
      %span= pluralize size, 'comment'
      = link_to '(hide)', '#'
    .comments
      = render partial: 'comments/comment', collection: r.comments

