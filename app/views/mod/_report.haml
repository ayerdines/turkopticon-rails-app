%tr{:class => cycle('odd', '')}
  %td{:valign => "top"}= link_to report.id.to_s, :controller => "main", :action => "report", :id => report.id
  %td{:valign => "top"}
    = link_to report.person.mod_display_name, :controller => "main", :action => "reports_by", :id => report.person_id
    %br/
    - if report.ip.blank?
      IP UNKNOWN
    - else
      = link_to report.ip, :controller => "main", :action => "reports_by_ip", :ip => report.ip
    %br/
    = report.created_at.strftime("%H:%M&nbsp;%m/%d/%y")
    - if report.updated_at > report.created_at
      %br/
      = report.updated_at.strftime("%H:%M&nbsp;%m/%d/%y")
  %td{:valign => "top"}
    = link_to h(report.amzn_requester_name), :controller => "main", :action => "index", :id => report.amzn_requester_id
    %br/
    = report.amzn_requester_id
    %br/
    = report.requester_id.to_s
  %td{:valign => "top"}
    - for attr in ["fair", "fast", "pay", "comm"]
      .attr_label= attr + ": "
      - val = eval("report." + attr)
      - if val == 0
        .attr_label no&nbsp;data
      - else
        .attr_label= val.to_s + "&nbsp;/&nbsp;5"
        = Requester.attr_vis(val)
      %br/
    - if report.tos_viol
      .tos AMT TOS VIOLATION
  %td#text{:valign => "top"}
    - if !report.hit_names.blank?
      %p
        %strong HIT(s):
        %br/
        - unless report.hit_names.nil?
          = h(report.hit_names.censor).gsub(";","<br/>")
    - unless report.description.nil?
      = h(report.description.censor).gsub("\r\n","<br/>")
    - unless report.displayed_notes.nil?
      %p.notes= report.displayed_notes
    - flags = report.flags
    - comments = report.comments
    - if flags.count > 0 or comments.count > 0
      - flags_and_comments = flags + comments
      - flags_and_comments = flags_and_comments.sort_by{|item| item.created_at}
      %table.fctable
        - flags_and_comments.each do |item|
          %tr
            %td{:valign => "top"}
              - if item.class == LegacyFlag
                %img{:src => "/images/warning.gif"}
              - else
                %img{:src => "/images/bubble.png"}
            %td
              = item.class == LegacyFlag ? item.comment.gsub(/\n/,'<br/>') : item.body.gsub(/\n/,'<br/>')
              .notes= item.displayed_notes
              .meta
                = item.created_at.strftime("%b %d %Y %H:%M")
                &nbsp;|&nbsp;
                = link_to item.person.mod_display_name, :controller => "main", :action => "reports_by", :id => item.person_id
    - if report.ignore_count > 0
      .lightbox
        - report.ignores.each do |ignore|
          = "Flags ignored by <strong>" + ignore.person.display_name + "</strong> at " + ignore.created_at.strftime("%b %d %Y %H:%M")
          %br/
    .placeholder{:id => report.id}
  %td.center{:valign => "top"}
    - if LegacyFlag.find_by_person_id_and_report_id(@person.id, report.id).nil?
      = link_to_remote "Flag", :url => {:controller => "mod", :action => "flag", :id => report.id}
      %br/
    - if flags.count > 0
      - if LegacyFlag.find_by_person_id_and_report_id(@person.id, report.id).nil?
        = link_to "Agree&nbsp;w/&nbsp;Flagger", :controller => "mod", :action => "agree_with_flagger", :id => report.id
        %br/
      - if Ignore.find_by_person_id_and_report_id(@person.id, report.id).nil?
        = link_to "Ignore&nbsp;Flags", :controller => "mod", :action => "ignore", :id => report.id
        %br/
    = link_to_remote "Comment", :url => {:controller => "mod", :action => "comment", :id => report.id}